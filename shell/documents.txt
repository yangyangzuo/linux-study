bash:    
    https://www.gnu.org/software/bash/manual/
    https://www.gnu.org/ -> software -> bash -> 
    https://www.gnu.org/software/bash/ -> documentation -> https://www.gnu.org/software/bash/manual/-> 
    https://www.gnu.org/software/bash/manual/html_node/index.html


    


shell分类:
    1.sh(bourne shell):由ssteve bourne开发
    2.csh(c shell):
    3.ksh(k shell):很多unix系统标准的shell,在这些系统上/bin/sh往往指向/bin/ksh
    4.tcsh(TENEX C shell):csh的增强版本,引入了命令补全功能,在freebsd,macosx等系统上替代了csh
    5.bash(bournce again shell):gnu开发的shell,主要目标是与POSIX保持一致,同时兼容sh,是各种linux发行版标准配置的shell,linux系统中/bin/sh往往指向/bin/bash


    bash和sh的关系:
    ll /bin
    可以看出sh指向当前系统的一种shell解释器,不同的系统指向不同
    lrwxrwxrwx  1 root root       4 Jul  2 10:15 sh -> dash*


    #ubuntu默认指向dash
    ➜  ~ ls -l /bin/sh
    lrwxrwxrwx 1 root root 4 Oct  7 03:14 /bin/sh -> dash
    这里需要注意:如果sh指向dash,如果脚本中有for循环,则sh 脚本.sh会报错,dash应该是不支持for循环,因此需要执行:bash 脚本.sh
    错误消息: Syntax error: Bad for loop variable

    


    #passwd每行的最后一列显示了用户使用的shell
    ➜  ~ cat /etc/passwd
    root:x:0:0:root:/root:/bin/bash
    daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin
    bin:x:2:2:bin:/bin:/usr/sbin/nologin
    sys:x:3:3:sys:/dev:/usr/sbin/nologin
    sync:x:4:65534:sync:/bin:/bin/sync

    #查看当前系统默认使用的shell
    echo $SHELL

    #shell的切换,输入对应的shell名字即可
    bash
    dash
    zsh


    查看当前系统支持的所有shell
    cat /etc/shells

    # /etc/shells: valid login shells
    /bin/sh
    /bin/bash
    /bin/rbash
    /bin/dash





  









